{"ast":null,"code":"var _jsxFileName = \"D:\\\\Audio extractor\\\\audio-extracter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"https://api.assemblyai.com/v2\"; // Replace with the correct API endpoint\nconst apiKey = \"your-api-key\"; // Replace with your actual API key\n\nconst headers = {\n  authorization: apiKey,\n  \"content-type\": \"audio/mpeg\" // Set the correct content type for your audio file\n};\n\nconst assemblyApi = axios.create({\n  baseURL: baseUrl,\n  headers: headers\n});\nconst initialState = {\n  url: null,\n  blob: null,\n  chunks: null,\n  duration: {\n    h: 0,\n    m: 0,\n    s: 0\n  }\n};\nlet polling;\nfunction App() {\n  _s();\n  const [audioDetails, setAudioDetails] = useState(initialState);\n  const [transcript, setTranscript] = useState({\n    id: \"\",\n    text: \"\",\n    status: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [audioFile, setAudioFile] = useState(null);\n  useEffect(() => {\n    // ... (unchanged code for interval polling)\n  }, [isLoading, transcript]);\n  const checkTranscriptionStatus = async transcriptionId => {\n    // ... (unchanged code for checking transcription status)\n  };\n  const handleAudioStop = data => {\n    setAudioDetails(data);\n  };\n  const handleReset = () => {\n    setAudioDetails({\n      ...initialState\n    });\n    setTranscript({\n      id: \"\",\n      text: \"\",\n      status: \"\"\n    });\n    setError(\"\");\n  };\n  const handleAudioUpload = event => {\n    const file = event.target.files[0];\n    setAudioFile(file);\n  };\n  const handleTranscribeAndDownload = async () => {\n    if (audioFile) {\n      setIsLoading(true);\n      setError(\"\"); // Reset any previous errors\n\n      // ... (unchanged code for audio file upload and transcription request)\n    } else {\n      setError(\"Please select an audio file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"xl\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"50vh\",\n        padding: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"8px\"\n        },\n        children: [transcript.text ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Transcription:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: transcript.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: isLoading ? \"Transcription in progress. Please wait...\" : transcript.status === \"failed\" ? \"Transcription failed. Please try again.\" : transcript.status === \"queued\" ? \"Job in Queue, Please Wait...\" : \"Transcription not yet completed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".mp3, .wav\",\n          onChange: handleAudioUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTranscribeAndDownload,\n          children: \"Transcribe and Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"300px\",\n          paddingTop: \"-1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vNvuEi72sstVtmAoe5r2oRpFG4M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","baseUrl","apiKey","headers","authorization","assemblyApi","create","baseURL","initialState","url","blob","chunks","duration","h","m","s","polling","App","_s","audioDetails","setAudioDetails","transcript","setTranscript","id","text","status","isLoading","setIsLoading","error","setError","audioFile","setAudioFile","checkTranscriptionStatus","transcriptionId","handleAudioStop","data","handleReset","handleAudioUpload","event","file","target","files","handleTranscribeAndDownload","style","textAlign","fontSize","children","minHeight","padding","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","type","accept","onChange","onClick","width","paddingTop","_c","$RefreshReg$"],"sources":["D:/Audio extractor/audio-extracter/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst baseUrl = \"https://api.assemblyai.com/v2\"; // Replace with the correct API endpoint\nconst apiKey = \"your-api-key\"; // Replace with your actual API key\n\nconst headers = {\n  authorization: apiKey,\n  \"content-type\": \"audio/mpeg\", // Set the correct content type for your audio file\n};\n\nconst assemblyApi = axios.create({\n  baseURL: baseUrl,\n  headers: headers,\n});\n\nconst initialState = {\n  url: null,\n  blob: null,\n  chunks: null,\n  duration: {\n    h: 0,\n    m: 0,\n    s: 0,\n  },\n};\n\nlet polling;\n\nfunction App() {\n  const [audioDetails, setAudioDetails] = useState(initialState);\n  const [transcript, setTranscript] = useState({\n    id: \"\",\n    text: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [audioFile, setAudioFile] = useState(null);\n\n  useEffect(() => {\n    // ... (unchanged code for interval polling)\n  }, [isLoading, transcript]);\n\n  const checkTranscriptionStatus = async (transcriptionId) => {\n    // ... (unchanged code for checking transcription status)\n  };\n\n  const handleAudioStop = (data) => {\n    setAudioDetails(data);\n  };\n\n  const handleReset = () => {\n    setAudioDetails({ ...initialState });\n    setTranscript({ id: \"\", text: \"\", status: \"\" });\n    setError(\"\");\n  };\n\n  const handleAudioUpload = (event) => {\n    const file = event.target.files[0];\n    setAudioFile(file);\n  };\n\n  const handleTranscribeAndDownload = async () => {\n    if (audioFile) {\n      setIsLoading(true);\n      setError(\"\"); // Reset any previous errors\n\n      // ... (unchanged code for audio file upload and transcription request)\n    } else {\n      setError(\"Please select an audio file.\");\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", fontSize: \"xl\" }}>\n      <div\n        style={{\n          minHeight: \"50vh\",\n          padding: \"30px\",\n        }}\n      >\n        <div style={{ marginBottom: \"8px\" }}>\n          {transcript.text ? (\n            <div>\n              <p>Transcription:</p>\n              <p>{transcript.text}</p>\n            </div>\n          ) : (\n            <p>\n              {isLoading\n                ? \"Transcription in progress. Please wait...\"\n                : transcript.status === \"failed\"\n                ? \"Transcription failed. Please try again.\"\n                : transcript.status === \"queued\"\n                ? \"Job in Queue, Please Wait...\"\n                : \"Transcription not yet completed.\"}\n            </p>\n          )}\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\n        </div>\n\n        <div>\n          <input type=\"file\" accept=\".mp3, .wav\" onChange={handleAudioUpload} />\n        </div>\n\n        <div>\n          <button onClick={handleTranscribeAndDownload}>\n            Transcribe and Download\n          </button>\n          <button onClick={handleReset}>Reset</button>\n        </div>\n\n        <div style={{ width: \"300px\", paddingTop: \"-1\" }}>\n          {/* Your Recorder component */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}