{"ast":null,"code":"var _jsxFileName = \"D:\\\\Audio extractor\\\\audio-extracter\\\\src\\\\App.js\";\nimport * as React from \"react\";\nimport AssemblyAI from \"assemblyai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"YOUR_ASSEMBLYAI_API_KEY\";\nconst FILE_URL = \"https://storage.googleapis.com/aai-web-samples/5_common_sports_injuries.mp3\";\nconst TranscriptionApp = () => {\n  const runTranscription = async () => {\n    const client = new AssemblyAI({\n      apiKey: API_KEY\n    });\n    const data = {\n      audio_url: FILE_URL,\n      speaker_labels: true\n    };\n    try {\n      const transcript = await client.transcripts.create(data);\n      console.log(transcript.text);\n      for (const utterance of transcript.utterances) {\n        console.log(`Speaker ${utterance.speaker}: ${utterance.text}`);\n      }\n    } catch (error) {\n      console.error(\"Transcription error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: runTranscription,\n      children: \"Transcribe and Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = TranscriptionApp;\nexport default TranscriptionApp;\nvar _c;\n$RefreshReg$(_c, \"TranscriptionApp\");","map":{"version":3,"names":["React","AssemblyAI","jsxDEV","_jsxDEV","API_KEY","FILE_URL","TranscriptionApp","runTranscription","client","apiKey","data","audio_url","speaker_labels","transcript","transcripts","create","console","log","text","utterance","utterances","speaker","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Audio extractor/audio-extracter/src/App.js"],"sourcesContent":["import * as React from \"react\";\nimport AssemblyAI from \"assemblyai\";\n\nconst API_KEY = \"YOUR_ASSEMBLYAI_API_KEY\";\nconst FILE_URL =\n  \"https://storage.googleapis.com/aai-web-samples/5_common_sports_injuries.mp3\";\n\nconst TranscriptionApp: React.FC = () => {\n  const runTranscription = async () => {\n    const client = new AssemblyAI({ apiKey: API_KEY });\n\n    const data = {\n      audio_url: FILE_URL,\n      speaker_labels: true,\n    };\n\n    try {\n      const transcript = await client.transcripts.create(data);\n\n      console.log(transcript.text);\n\n      for (const utterance of transcript.utterances) {\n        console.log(`Speaker ${utterance.speaker}: ${utterance.text}`);\n      }\n    } catch (error) {\n      console.error(\"Transcription error:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={runTranscription}>Transcribe and Display</button>\n    </div>\n  );\n};\n\nexport default TranscriptionApp;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAG,yBAAyB;AACzC,MAAMC,QAAQ,GACZ,6EAA6E;AAE/E,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EACvC,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,MAAM,GAAG,IAAIP,UAAU,CAAC;MAAEQ,MAAM,EAAEL;IAAQ,CAAC,CAAC;IAElD,MAAMM,IAAI,GAAG;MACXC,SAAS,EAAEN,QAAQ;MACnBO,cAAc,EAAE;IAClB,CAAC;IAED,IAAI;MACF,MAAMC,UAAU,GAAG,MAAML,MAAM,CAACM,WAAW,CAACC,MAAM,CAACL,IAAI,CAAC;MAExDM,OAAO,CAACC,GAAG,CAACJ,UAAU,CAACK,IAAI,CAAC;MAE5B,KAAK,MAAMC,SAAS,IAAIN,UAAU,CAACO,UAAU,EAAE;QAC7CJ,OAAO,CAACC,GAAG,CAAE,WAAUE,SAAS,CAACE,OAAQ,KAAIF,SAAS,CAACD,IAAK,EAAC,CAAC;MAChE;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,eACEpB,OAAA;MAAQqB,OAAO,EAAEjB,gBAAiB;MAAAgB,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACC,EAAA,GA3BIvB,gBAA0B;AA6BhC,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}