{"ast":null,"code":"var _jsxFileName = \"D:\\\\Audio extractor\\\\audio-extracter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport fs from \"fs-extra\"; // You may need to import a suitable library for file operations in a React environment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const baseUrl = \"https://api.assemblyai.com/v2\";\n      const headers = {\n        authorization: \"6bdccc2045804a77b4ac2a5ba59a0e28\"\n      };\n      const path = \"./hello.mp3\"; // Replace with the path to your audio file\n      try {\n        const audioData = await fs.readFile(path); // You may need to adjust this part to read the file in a React context\n\n        const uploadResponse = await axios.post(`${baseUrl}/upload`, audioData, {\n          headers\n        });\n        const uploadUrl = uploadResponse.data.upload_url;\n        const data = {\n          audio_url: uploadUrl\n        };\n        const url = `${baseUrl}/transcript`;\n        const response = await axios.post(url, data, {\n          headers\n        });\n        const transcriptId = response.data.id;\n        const pollingEndpoint = `${baseUrl}/transcript/${transcriptId}`;\n        while (true) {\n          const pollingResponse = await axios.get(pollingEndpoint, {\n            headers: headers\n          });\n          const transcriptionResult = pollingResponse.data;\n          if (transcriptionResult.status === \"completed\") {\n            setTranscript(transcriptionResult.text);\n            break;\n          } else if (transcriptionResult.status === \"error\") {\n            setError(`Transcription failed: ${transcriptionResult.error}`);\n            break;\n          } else {\n            await new Promise(resolve => setTimeout(resolve, 3000));\n          }\n        }\n      } catch (error) {\n        setError(`An error occurred: ${error.message}`);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [transcript ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Transcription:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/MC5B6HaW9zAQWe6JthLglko+jk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","fs","jsxDEV","_jsxDEV","App","_s","transcript","setTranscript","error","setError","fetchData","baseUrl","headers","authorization","path","audioData","readFile","uploadResponse","post","uploadUrl","data","upload_url","audio_url","url","response","transcriptId","id","pollingEndpoint","pollingResponse","get","transcriptionResult","status","text","Promise","resolve","setTimeout","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Audio extractor/audio-extracter/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport fs from \"fs-extra\"; // You may need to import a suitable library for file operations in a React environment\n\nconst App = () => {\n  const [transcript, setTranscript] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const baseUrl = \"https://api.assemblyai.com/v2\";\n      const headers = {\n        authorization: \"6bdccc2045804a77b4ac2a5ba59a0e28\",\n      };\n      const path = \"./hello.mp3\"; // Replace with the path to your audio file\n      try {\n        const audioData = await fs.readFile(path); // You may need to adjust this part to read the file in a React context\n\n        const uploadResponse = await axios.post(\n          `${baseUrl}/upload`,\n          audioData,\n          {\n            headers,\n          }\n        );\n        const uploadUrl = uploadResponse.data.upload_url;\n\n        const data = {\n          audio_url: uploadUrl,\n        };\n        const url = `${baseUrl}/transcript`;\n        const response = await axios.post(url, data, { headers });\n\n        const transcriptId = response.data.id;\n        const pollingEndpoint = `${baseUrl}/transcript/${transcriptId}`;\n\n        while (true) {\n          const pollingResponse = await axios.get(pollingEndpoint, {\n            headers: headers,\n          });\n          const transcriptionResult = pollingResponse.data;\n\n          if (transcriptionResult.status === \"completed\") {\n            setTranscript(transcriptionResult.text);\n            break;\n          } else if (transcriptionResult.status === \"error\") {\n            setError(`Transcription failed: ${transcriptionResult.error}`);\n            break;\n          } else {\n            await new Promise((resolve) => setTimeout(resolve, 3000));\n          }\n        }\n      } catch (error) {\n        setError(`An error occurred: ${error.message}`);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {transcript ? (\n        <div>\n          <h1>Transcription:</h1>\n          <p>{transcript}</p>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n      {error && <p>Error: {error}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}